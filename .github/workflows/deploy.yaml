name: CI and Deploy

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
    workflow_dispatch: {}

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"
                  cache: "pnpm"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 9

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Lint
              run: pnpm lint || true

            - name: Run tests
              env:
                  NODE_ENV: test
                  SKIP_INTEGRATION_TESTS: "true"
                  ENABLE_IMPROVEMENT_SCORING: "true"
              run: pnpm test --color

    deploy:
        needs: test
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"
                  cache: "pnpm"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 9

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build
              env:
                  NEXT_TELEMETRY_DISABLED: "1"
              run: pnpm build

            - name: Deploy with Vercel CLI
              uses: amondnet/vercel-action@v25
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
                  vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
                  working-directory: ./
                  vercel-args: --prod
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
